@model MenuMaker.Models.MenuEditVM

@{
    ViewBag.Title = "Edit";
    var selectList = new SelectList(Model.RecipeViewModelsDropdownList, "id", "name");

    var weekDays = Model.MenuRecipes.Select(i => i.Day).Distinct().ToList();
    weekDays.Sort();
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MenuViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonsCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonsCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonsCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <div class="form-group">
                <h4>
                    @Html.Label("Monday", new { @class = "control-label col-md-2" })
                </h4>

            </div>
            <div class="monday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @foreach (var menuRecipe in Model.MenuRecipes.Where(i => i.DayId == 1).ToList())
                        {
                            selectList.Where(i => int.Parse(i.Value) == menuRecipe.RecipeId)
                                .FirstOrDefault()
                                .Selected = true;

                            @Html.Label("RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("RecipeId", selectList, htmlAttributes: new { @class = "form-control" })
                                <input name="DayId" value="1" hidden />
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>
        </div>

        @*<h4>
                @Html.Label("Tuesday")
            </h4>
            <div class="tuesday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipeId, "RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RecipeId, new SelectList(Model.RecipeViewModelsDropdownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
                            <input name="DayId" value="2" hidden />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>

            <h4>
                @Html.Label("Wednesday")
            </h4>
            <div class="wednesday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipeId, "RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RecipeId, new SelectList(Model.RecipeViewModelsDropdownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
                            <input name="DayId" value="3" hidden />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>

            <h4>
                @Html.Label("Thursday")
            </h4>
            <div class="thursday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipeId, "RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RecipeId, new SelectList(Model.RecipeViewModelsDropdownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
                            <input name="DayId" value="4" hidden />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>

            <h4>
                @Html.Label("Friday")
            </h4>
            <div class="friday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipeId, "RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RecipeId, new SelectList(Model.RecipeViewModelsDropdownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
                            <input name="DayId" value="5" hidden />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>

            <h4>
                @Html.Label("Saturday")
            </h4>
            <div class="saturday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipeId, "RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RecipeId, new SelectList(Model.RecipeViewModelsDropdownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
                            <input name="DayId" value="6" hidden />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>

            <h4>
                @Html.Label("Sunday")
            </h4>
            <div class="sunday week-day">
                <div class="recipe-input-fields">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipeId, "RecipeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.RecipeId, new SelectList(Model.RecipeViewModelsDropdownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RecipeId, "", new { @class = "text-danger" })
                            <input name="DayId" value="7" hidden />
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add recipe" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                    </div>
                </div>
            </div>*@





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
