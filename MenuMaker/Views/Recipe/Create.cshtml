@model MenuMaker.Models.RecipeIngredientsViewModel


@using (Html.BeginForm("Create", "Recipe", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recipe creation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RecipeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Name", new { htmlAttributes = new { @class = "form-control", name = "RecipeName" } })
                @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                @Html.Label("Choose a picture")
            </div>
            <div class="col-md-10">
                <label for="choose-a-file-btn" class="btn btn-default">Browse..</label>
                <input type="file" name="ImageFile" id="choose-a-file-btn" style="visibility:hidden; height:0;">
            </div>
        </div>

        <div class="ingredients-in-recipe">
            <div class="ingredient-input-fields">
                <div class="form-group">
                    @Html.LabelFor(model => model.IngredientId, "IngredientId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.IngredientId, new SelectList(Model.IngredientsDropDownList, "id", "name"), "-Please select ingredient-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IngredientId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", type = "number", min = 0 } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create recipe" class="btn btn-default" style='width:120px' />
                <input type="button" value="Add new" class="btn btn-default" style='width:120px' onclick="GetDynamicInfredientInputFields()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Content/Controllers/RecipeViewModelsController/Create.js")"></script>
}

