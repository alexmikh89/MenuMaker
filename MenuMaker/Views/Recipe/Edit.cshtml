@model MenuMaker.Models.RecipeViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RecipeViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.Label("Picture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.ImagePath != null)
                {
                    <img src="@Url.Content(Model.ImagePath)" width="200" />
                }
                else
                {
                    <h3>No image loaded</h3>
                }
            </div>
        </div>
       



        <div class="form-group">
            <div class="control-label col-md-2">
                @Html.Label("Picture")
            </div>
            <div class="col-md-10">
                <label for="choose-a-file-btn" class="btn btn-default">Browse..</label>
                <input type="file" name="ImageFile" @*required*@ id="choose-a-file-btn" style="visibility:hidden; height:0;">
            </div>
        </div>



        <div class="week-day">

            <div class="hidden">
                <div class="recipe-input-fields">

                    @{
                        var recipeDropdownSelectList2 = new SelectList(Model.IngredientsDropDownList, "id", "name");
                    }
                    <div class="form-group">
                        @Html.Label("Ingredient:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("IngredientId", recipeDropdownSelectList2, "-No IngredientId selected-", htmlAttributes: new { @class = "form-control" })
                            <button type="button" class="btn btn-default" style='width:120px' onclick="Remove(this)">Remove</button>
                        </div>
                        @Html.Label("Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("Amount", new { htmlAttributes = new { @class = "form-control", type = "number", min = 0, @Value = 1 } })
                            @Html.ValidationMessage("Amount", "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="recipe-input-fields">
                @foreach (var ingredient in Model.RecipeIngredients.ToList())
                {
                    var ingredientDropdownSelectList = new SelectList(Model.IngredientsDropDownList, "id", "name", ingredient.IngredientId);

                    <div class="form-group">
                        @Html.Label("IngredientId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("IngredientId", ingredientDropdownSelectList, "-No ingredient selected-", htmlAttributes: new { @class = "form-control" })
                            <button type="button" class="btn btn-default" style='width:120px' onclick="Remove(this)">Remove</button>
                        </div>
                        @Html.Label("Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("Amount", new { htmlAttributes = new { @class = "form-control", type = "number", min = 0, @Value = @ingredient.Amount } })
                            @Html.ValidationMessage("Amount", "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Add ingredient" class="btn btn-default" style='width:120px' onclick="GetDynamicRecipeInputFields(this)" />
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="@Url.Content("~/Content/Controllers/MenuController/input-area.js")"></script>
}
